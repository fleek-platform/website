name: ‚ö°Ô∏è Deploy site (Common)

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
    secrets:
      fleek_token:
        required: true
      doppler_token:
        required: true

jobs:
  deploy-to-fleek:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      ASTRO_PUBLIC_DASHBOARD_PATH: "public/dashboard"
      FLEEK_TOKEN: ${{ secrets.fleek_token }}
      DOPPLER_TOKEN: ${{ secrets.doppler_token }}
      TARGET_ENVIRONMENT: ${{ inputs.environment }}
      FLEEK_PROJECT_ID: ${{ vars.FLEEK_PROJECT_ID }}
      FLEEK_SLUG: ${{ vars.FLEEK_SLUG }}
      GITHUB_DASHBOARD_SOURCE_REPO: "fleek-platform/dashboard"
      GITHUB_TOKEN: ${{ github.token }}
      PRIVATE_MEILISEARCH_DOCUMENTS_ADMIN_API_KEY: ${{ vars.PRIVATE_MEILISEARCH_DOCUMENTS_ADMIN_API_KEY }}
      PUBLIC_BEEHIIV_PROXY_SERVER_URL: ${{ vars.PUBLIC_BEEHIIV_PROXY_SERVER_URL }}
      PUBLIC_DYNAMIC_ENVIRONMENT_ID: ${{ vars.PUBLIC_DYNAMIC_ENVIRONMENT_ID }}
      PUBLIC_FLEEK_REST_API_URL: ${{ vars.PUBLIC_FLEEK_REST_API_URL }}
      PUBLIC_GRAPHQL_ENDPOINT: ${{ vars.PUBLIC_GRAPHQL_ENDPOINT }}
      PUBLIC_MEILISEARCH_DOCUMENTS_CLIENT_API_KEY: ${{ vars.PUBLIC_MEILISEARCH_DOCUMENTS_CLIENT_API_KEY }}
      PUBLIC_MEILISEARCH_HOST: ${{ vars.PUBLIC_MEILISEARCH_HOST }}
      PUBLIC_MEILISEARCH_INDEX_BILLING: ${{ vars.PUBLIC_MEILISEARCH_INDEX_BILLING }}
      PUBLIC_MEILISEARCH_INDEX_BLOG: ${{ vars.PUBLIC_MEILISEARCH_INDEX_BLOG }}
      PUBLIC_MEILISEARCH_INDEX_DOCS: ${{ vars.PUBLIC_MEILISEARCH_INDEX_DOCS }}
      PUBLIC_MEILISEARCH_INDEX_GUIDES: ${{ vars.PUBLIC_MEILISEARCH_INDEX_GUIDES }}
      PUBLIC_MEILISEARCH_INDEX_REFERENCES: ${{ vars.PUBLIC_MEILISEARCH_INDEX_REFERENCES }}
      PUBLIC_POSTHOG_API_KEY: ${{ vars.PUBLIC_POSTHOG_API_KEY }}
      PUBLIC_POSTHOG_HOST: ${{ vars.PUBLIC_POSTHOG_HOST }}
      PUBLIC_SUPPORT_API_HOST: ${{ vars.PUBLIC_SUPPORT_API_HOST }}
      PUBLIC_UI_APP_URL: ${{ vars.PUBLIC_UI_APP_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - uses: ./.github/actions/setup-nodejs

      - name: Cache astro build
        uses: actions/cache@v3
        with:
          path: |
            .astro
            ./node_modules/.astro
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v3

      - name: Setup Doppler
        run: |
          doppler configure set token "$DOPPLER_TOKEN"

      - name: Env vars health check
        run: |
          if ! doppler run -- printenv | grep -q 'NEXT_PUBLIC_SDK__AUTHENTICATION_URL'; then
            echo "üëπ Oops! Missing required environment variable during health check..."
            exit 1           
          fi

          echo "üöë Doppler envVars seem healthy!"

      - name: Setup dotenv
        run: |
          scripts/setup-ci-dotenv

      - name: Install Fleek CLI
        run: npm i -g @fleek-platform/cli

      # TODO: Maybe separate into three steps:
      # - Site build
      # - Dashboard
      # - Deploy
      - name: Install Packages
        run: npm install

      - name: Prepare Dashboard files
        run: |
          if ! scripts/setup_dashboard "$TARGET_ENVIRONMENT" "$ASTRO_PUBLIC_DASHBOARD_PATH"; then
            echo "üëπ Oops! Failed to setup the dashboard files for some reason..."
            exit 1
          fi

      - name: Setup fleek.config.json
        working-directory: ./
        run: |
          DIST_PATH="./dist"
          BUILD="npm run build"

          ./scripts/setup-fleek-config \
            "$FLEEK_SLUG" \
            "$DIST_PATH" \
            "$BUILD"

      - name: Build & deploy
        run: |
          fleek sites deploy

      - name: TIAS Public dir
        run: |
          echo "[debug] ls -la ./dist"
          ls -la ./dist
          echo "[debug] ls -la ./dist/dashboard"
          ls -la ./dist/dashboard

      - name: Clear
        run: |
          rm .env
